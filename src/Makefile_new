CXX = g++
CUR_DIR = /home/edwards/app/dongle_app/

#设置头文件搜索路径,O2为优化目标文件,CFLAGS表示用于C编译器的选项,CXXFLAGS表示用于C++编译器的选项
CFLAGS = -lpthread -lrt -g -Wl,--as-needed -O2 
CXXFLAGS = -lpthread -lrt -g -Wl,--as-needed -O2 \
-I$(CUR_DIR)/src/ \
-I$(CUR_DIR)/src/PublicInterface/FifoQueue/ \
-I$(CUR_DIR)/src/PublicInterface/Hotplug/ \
-I$(CUR_DIR)/src/PublicInterface/SocketWrap/ \
-I$(CUR_DIR)/src/PublicInterface/SynInterface/ \
-I$(CUR_DIR)/src/StartDongleAndAlsa/ \
-I$(CUR_DIR)/src/StartDongleAndAlsa/AudioAlsa/ \
-I$(CUR_DIR)/src/StartDongleAndAlsa/SerialDongle/ \
-I$(CUR_DIR)/src/StartDongleAndAlsa/SerialDongle/Usart/ \
-std=c++11

LIB +=  -L/usr/local/lib/   -L/usr/lib/  -L/home/edwards/app/dongle_app/lib/ 

#生成的可执行文件
TARGET = dongle_app

#DIRS字符串的值为依赖文件目录
DIRS = $(CUR_DIR)/src \
$(CUR_DIR)/src/PublicInterface/FifoQueue/ \
$(CUR_DIR)/src/PublicInterface/Hotplug/ \
$(CUR_DIR)/src/PublicInterface/SocketWrap/ \
$(CUR_DIR)/src/PublicInterface/SynInterface/ \
$(CUR_DIR)/src/StartDongleAndAlsa/ \
$(CUR_DIR)/src/StartDongleAndAlsa/AudioAlsa/ \
$(CUR_DIR)/src/StartDongleAndAlsa/SerialDongle/ \
$(CUR_DIR)/src/StartDongleAndAlsa/SerialDongle/Usart/ \
$(CUR_DIR)

#查找所用目录下的.c文件
#foreach函数的功能是查找字符串DIRS中按照空格分割的目录,先传给临时变量dir,然后执行wildcard $(dir)/*.c
#wildcard函数的功能是返回dir指定目录下所有扩展名为.c和.cpp的文件列表
CC_FILES = $(foreach dir, $(DIRS), $(wildcard $(dir)/*.c))
CXX_FILES = $(foreach dir, $(DIRS), $(wildcard $(dir)/*.cpp))

#patsubst函数的功能是查找CC_FILES和CXX_FILES中的文件，将符合.c和.cpp的文件替换为.o文件
CC_OBJS = $(patsubst %.c, %.o, $(CC_FILES))
CXX_OBJS = $(patsubst %.cpp, %.o, $(CXX_FILES))

OBJS = $(CC_OBJS) $(CXX_OBJS)

#生成可执行文件TARGET
$(TARGET):$(OBJS)
	$(CXX) -g -Wall -o $(TARGET) $(OBJS) $(LIB) 

#.PHONY为了避免伪目标clean和文件重名
.PHONY:clean
clean:
	-$(RM) $(TARGET)
	-$(RM) $(OBJS)
info:
	@echo "CC_OBJS:${CC_OBJS}"
	@echo "CXX_OBJS:${CXX_OBJS}"
